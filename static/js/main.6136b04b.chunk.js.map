{"version":3,"sources":["components/form.js","components/todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setTodo","todo","setTodos","todos","setFilter","value","onChange","e","target","className","type","disabled","length","onClick","preventDefault","task","status","id","Math","random","toFixed","name","Todo","thisTodo","useRef","ref","console","log","map","el","current","classList","add","setTimeout","filter","TodoList","filteredTodos","App","useState","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","filteringTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6136b04b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({ setTodo, todo, setTodos, todos, setFilter }) => {\r\n\r\n\r\n    const inputHandler = (e) => {\r\n        setTodo(e.target.value);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([...todos, {task: todo, status:false, id: (Math.random()*1000).toFixed(5) }]);\r\n        setTodo('');\r\n\r\n    }\r\n\r\n    const filterHandler = (e) => {\r\n        setFilter(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <input value={todo} onChange={inputHandler} className='todo-input' type=\"text\" />\r\n            <button disabled={todo.length===0} onClick={submitHandler} className='todo-button' type=\"submit\">\r\n                <i className='fas fa-plus-square'></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={filterHandler} name=\"todos\" className='filter-todo'>\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default Form;","import { useRef } from \"react\";\r\nimport React from 'react';\r\n\r\nconst Todo = ({task, todos, setTodos, id, todo}) => {\r\n\r\n    const thisTodo = useRef('');\r\n    /* Events */\r\n    const deleteHandler = () => {\r\n        /* setTodos(todos.filter( el =>  el.id !== id  )); */\r\n        thisTodo.current.classList.add('fall');\r\n        setTimeout(()=>{setTodos(todos.filter( el =>  el.id !== id  ))},\r\n            900\r\n        )\r\n\r\n    }\r\n    const completeHandler = () => {\r\n        console.log(todo);\r\n        setTodos(todos.map( (el) => {\r\n                if(el.id === id){\r\n                    return {\r\n                        ...todo, status: !el.status\r\n                    }\r\n                }\r\n                return el;\r\n            })\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div ref={thisTodo} className=\"todo\">\r\n            <li className={`todo-item ${todo.status ? 'completed' : 'uncompleted'} `}>\r\n                {task}\r\n            </li>\r\n            <button onClick={completeHandler} className='complete-btn'>\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className='trash-btn'>\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\n/* importing components */\r\nimport Todo from './todo';\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n\r\n    return(\r\n        <div className='todo-container'>\r\n            <ul className='todo-list'>\r\n\r\n                {\r\n                    filteredTodos.map((todo) => {\r\n                        return <Todo\r\n                        key={todo.id}\r\n                        task={todo.task}\r\n                        setTodos={setTodos}\r\n                        todos={todos}\r\n                        id = {todo.id}\r\n                        todo = {todo}\r\n                        />\r\n                    })\r\n                }\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TodoList;","import './App.css';\nimport { useState, useEffect } from \"react\";\n/* Importing */\nimport Form from './components/form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [todo, setTodo] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() =>{\n    /* Getting from localStorage */\n  const getFromLocalStorage = () => {\n    if(localStorage.getItem('todos')=== null){\n      localStorage.setItem('todos', JSON.stringify([]));\n    }else{\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n\n  }\n    getFromLocalStorage();\n  }, []);\n\n  useEffect(() =>{\n    /* Saving to localStorage */\n    const saveToLocalStorage = () => {\n      if(localStorage.getItem('todos')=== null){\n        localStorage.setItem('todos', JSON.stringify([]));\n      }\n      localStorage.setItem('todos', JSON.stringify(todos));\n    }\n    saveToLocalStorage();\n  }, [todos]);\n\n  useEffect( ()=>{\n    const filteringTodos = () => {\n      switch (filter) {\n        case 'completed':\n          setFilteredTodos(\n            todos.filter( (todo) => {\n              return todo.status === true\n            })\n          )\n          break;\n        case 'uncompleted':\n          setFilteredTodos(\n            todos.filter( (todo) => {\n              return todo.status === false\n            })\n          )\n          break\n        default:\n          setFilteredTodos([...todos]);\n          break;\n      }\n    }\n\n    filteringTodos();\n  }, [todos ,filter] );\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>\n          React Todo App of mine\n        </h1>\n        <p>Current todo: {todo}</p>\n      </header>\n      <Form setFilter={setFilter} todo={todo} setTodo={setTodo} todos={todos} setTodos={setTodos} />\n      <TodoList filteredTodos={filteredTodos} todos={todos} setTodos={setTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}